{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["NativeGoodsList","goods","map","id","name","color","style","GoodsList","memo","getAll","fetch","then","response","json","get5First","sort","firstName","secondName","localeCompare","slice","getRedGoods","filter","App","useState","setGoods","error","setError","handleFetchGoods","getGoodsCallback","fetchedGoods","catch","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"wMAOMA,EAAmC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACT,oBAAa,UAAQ,OAAOC,MAAO,CAAED,SAArC,SACGD,GADMD,SAOFI,EAAYC,eAAKR,GCZvB,SAASS,IACd,OAAOC,MAHI,yEAGWC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAG7C,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAACV,GAAD,OACJA,EACGc,MAAK,kBAASC,EAAT,EAAGZ,KAA2Ba,EAA9B,EAAwBb,KAAxB,OACJY,EAAUE,cAAcD,MAEzBE,MAAM,EAAG,OAILC,EAAc,WACzB,OAAOX,IACJE,MAAK,SAAAV,GAAK,OAAIA,EAAMoB,QAAO,kBAAyB,QAAzB,EAAGhB,aCftBiB,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOtB,EAAP,KAAcuB,EAAd,KACA,EAA0BD,mBAAS,MAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAEMC,EAAmB,SAACC,GACxBA,IACGjB,MAAK,SAACkB,GACLL,EAASK,GACTH,EAAS,SAEVI,MAAMJ,IAGX,OACE,sBAAKK,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMN,EAAiBlB,IAHlC,4BAQA,wBACEuB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMN,EAAiBb,IAHlC,gCAQA,wBACEkB,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMN,EAAiBP,IAHlC,4BAQA,cAACb,EAAD,CAAWN,MAAOA,IAEjBwB,GAAS,6CAAcA,SC/C9BS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.6515cfad.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[];\n};\n\nconst NativeGoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(({ id, name, color }) => (\n      <li key={id} data-cy=\"good\" style={{ color }}>\n        {name}\n      </li>\n    ))}\n  </ul>\n);\n\nexport const GoodsList = memo(NativeGoodsList);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL).then((response) => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then((goods) => (\n      goods\n        .sort(({ name: firstName }, { name: secondName }) => (\n          firstName.localeCompare(secondName)\n        ))\n        .slice(0, 5)\n    ));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(({ color }) => color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [error, setError] = useState(null);\n\n  const handleFetchGoods = (getGoodsCallback: () => Promise<Good[]>) => {\n    getGoodsCallback()\n      .then((fetchedGoods) => {\n        setGoods(fetchedGoods);\n        setError(null);\n      })\n      .catch(setError);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => handleFetchGoods(getAll)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => handleFetchGoods(get5First)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => handleFetchGoods(getRedGoods)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n\n      {error && <p>{`Error: ${error}`}</p>}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}